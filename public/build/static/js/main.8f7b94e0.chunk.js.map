{"version":3,"sources":["lib/feathers.js","components/OrderTable/OrderTable.jsx","components/OrderTable/index.jsx","components/Menu/Menu.jsx","components/Menu/index.jsx","pages/Lunch/index.jsx","pages/Lunch/Lunch.jsx","App.js","reportWebVitals.js","index.js"],"names":["client","feathers","socket","io","configure","socketio","timeout","authentication","storage","window","localStorage","Item","Option","OrderTable","props","tarProps","dbName","keys","dbService","text","service","useState","writeData","setWriteData","popupState","setPopupState","editKey","setEditKey","editIndex","setEditIndex","parsed","setParsed","parsed64","setParsed64","uploadFile","useRef","curdataIndex","setcurDataIndex","curorder","setcurOrder","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","listData","slice","para","a","find","query","result","data","obj","create","funUpdate","id","patch","remove","serverDataUpdate","dataIndex","order","rdataIndex","rorder","funFind","then","sortedArr","sort","b","toString","localeCompare","listDataProps","listDataAllProps","payAllTotalProps","useEffect","handleFiles","Promise","resolve","reject","current","files","length","size","isLt20M","error","push","reader","FileReader","onload","dataURL","readAsDataURL","console","log","addCreateData","key","value","createSend","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","_id","res","position","showConfirmButton","timer","catch","success","patchOrders","hasOwnProperty","funCreate","stage","pay","warning","typeComponents","e","type","element","onChange","placeholder","moment","format","TextArea","maxLength","rows","hasLimitHint","hasClear","style","width","dataSource","categoryProps","accept","ref","name","height","src","alt","mode","showSearch","venderNameProps","hasMask","visible","onOk","onCancel","onClose","Object","map","nb","label","className","onClick","onSort","list","Column","cell","record","index","sortable","Date","createTime","toLocaleString","updateTime","vendorName","vendorLicense","item","funRemove","prePages","total","pageSize","totalRender","pageNumber","Menu","menuProps","menuData","menuDataProps","formData","FormData","forEach","eKey","append","JSON","stringify","axios","method","headers","authorization","Res","patchUploads","isMenu","small","showPath","large","createAt","Lunch","myListData","setMyListData","myMenuData","setMyMenuData","myListDataAll","setMyListDataAll","totalAllProps","seTotalAllProps","idNo","payNo","filter","i","includes","x","idYes","payYes","money","reduce","parseInt","setPayNoArr","setPayYes","hasIncludes","ee","filterStr","setPayAllTotal","App","tFilterStr","setTFilterStr","payAllTotal","setPayOkTotal","payNoArr","join","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f7b94e0.chunk.js","sourcesContent":["import feathers from '@feathersjs/client';\nimport io from 'socket.io-client';\n\n\n\n// console.log('==config.dsturl:',config.dsturl);\nconst client = feathers();\n\n// const socket = io(\"http://localhost:3030\");\nconst socket = io();\nclient.configure(feathers.socketio(socket, {\n  timeout: 10000,\n}));\nclient.configure(feathers.authentication({\n  storage: window.localStorage\n}));\nexport default client;","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport {\n  Button,\n  Dialog,\n  Input,\n  Form,\n  Select,\n  DatePicker,\n  Message,\n  Card,\n  Table,\n  Pagination\n} from \"@alifd/next\";\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './OrderTable.css';\nconst Option = Select.Option;\nconst { Item } = Form;\nconst OrderTable = (props) => {\n  const { dbName, keys, text } = props.tarProps;\n  const dbService = client.service(`${dbName}`);\n  // const [listData, setListData] = useState([]);\n  // const [listDataAll, setListDataAll] = useState([]);\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\");\n  //uploads files\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null);\n  // sort\n  const [curdataIndex, setcurDataIndex] = useState('money');\n  const [curorder, setcurOrder] = useState('asc');\n  // change page\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.listData.slice(indexOfFirstPost, indexOfLastPost);\n  // dbService\n  async function funFind(para) {\n    const result = await dbService.find({ query: para });\n    // console.log(result);\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return (await dbService.create(obj))\n  }\n  async function funUpdate(id, obj) {\n    return (await dbService.patch(id, obj))\n  }\n  async function funRemove(id) {\n    return (await dbService.remove(id))\n  }\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n\n    funFind({}).then((result) => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number'\n          ? a[rdataIndex].toString()\n          : a[rdataIndex]\n        ).localeCompare(\n          typeof b[rdataIndex] === 'number'\n            ? b[rdataIndex].toString()\n            : b[rdataIndex]\n        );\n        return rorder === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1;\n      })\n      props.listDataProps(sortedArr);\n      props.listDataAllProps(sortedArr);\n      props.payAllTotalProps(sortedArr);\n    });\n\n\n  };\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M =\n          (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          Message.error('Image must smaller than 20MB!');\n          return reject();\n        }\n        resolve(isLt20M);\n      } else {\n        setParsed64('')\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0];\n      // console.log(data)\n      files.push(data);\n      setParsed(files);\n\n      //轉Base64 上傳檔案後呈現沒有寫到DB\n      const reader = new FileReader();\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n\n    setWriteData({ ...writeData, ...obj });\n  };\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) { //Check is edit state\n\n\n      Swal.fire({\n        title: `確定修改此資料?`,\n        text: '請確認修改資料!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消',\n      }).then((result) => {\n        if (result.isConfirmed) {\n\n          const data = currentPosts[editIndex];\n\n          let newObj = { ...data, ...writeData }\n\n          patchOrders(newObj)\n\n\n        }\n      });\n    } else {\n\n      Swal.fire({\n        title: `確定新增此資料?`,\n        text: '請確認資料填寫完整!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          createOrders();\n\n        }\n      });\n\n    }\n  };\n\n\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n    switch (type) {\n      case \"input\":\n        element = (\n          <Input\n            value={writeData[e]}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n            placeholder={e}\n          />\n        );\n        break;\n      case \"datePicker\":\n        element = (\n          <DatePicker\n            value={writeData[e]}\n            placeholder={e}\n            onChange={(value) => {\n              addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n        break;\n      case \"textArea\":\n        element = (\n          <Input.TextArea\n            value={writeData[e]}\n            placeholder={e}\n            maxLength={500}\n            rows={6}\n            hasLimitHint\n            aria-label=\"input max length 500\"\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"select\":\n        element = (\n          <Select\n            value={writeData[e]}\n            hasClear\n            style={{ width: '100%' }}\n            placeholder={e}\n            dataSource={props.categoryProps}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"uploads\":\n        element = (\n          <>\n            <input\n              accept=\"image/png, image/jpeg, image/jpg\"\n              ref={uploadFile}\n              onChange={handleFiles}\n              type=\"file\"\n              id=\"file\"\n              name=\"files\"\n            // multiple\n            />\n            {editKey == true ?\n              <img\n                style={{ width: '50px', height: '50px' }}\n                src={`${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`}\n                alt=\"圖片\"\n              />\n\n              : null\n\n            }\n\n            {/* <img  src={`${parsed64.length > 0 ? parsed64 : ezconImg}`} alt=\"圖片\"></img> */}\n          </>);\n        break;\n      case \"multiSelect\":\n        element = (\n          <>\n            <Select\n              mode=\"multiple\"\n              value={writeData[e]}\n              showSearch\n              onChange={(value) => {\n                addCreateData(e, value);\n              }}\n              dataSource={props.venderNameProps}\n              style={{ width: '100%' }}\n            />\n\n          </>);\n        break;\n    }\n    return element;\n  };\n\n\n\n\n\n  function createOrders() {//Use orders create\n    if(!writeData.hasOwnProperty(\"name\")||!writeData.hasOwnProperty(\"text\")||!writeData.hasOwnProperty(\"money\")){\n      Message.warning(\"請確實填寫資料\");\n    }else{\n      funCreate({ ...writeData, stage: \"完成\",pay:false }).then((res) => {\n        Swal.fire('成功!', `此資料已新增`, 'success');\n        console.log('==create success:', res);\n        serverDataUpdate();\n        setWriteData({});\n        setParsed64('');\n        setEditKey(false);\n        setPopupState(false);\n      }).catch((error) => {\n        console.log('==create fail:', error);\n        // Message.error(`${err}`);\n      })\n    }\n  \n\n  }\n\n  function patchPayOrders(data) {//Use pay money patch\n\n    Swal.fire({\n      title: `確定午餐錢繳交?`,\n      text: '麻煩再次確認金額哦～～',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        funUpdate(data._id, { pay: true }).then((res) => {\n          console.log('==update success:', res);\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: '付錢成功',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          // console.log(\"data.money\",data.money)\n          // props.setPayOkProps(data.money)\n          serverDataUpdate();\n          setWriteData({});\n          setParsed64('');\n          setEditKey(false);\n          setPopupState(false);\n        })\n          .catch((error) => {\n            console.log('==update fail:', error);\n            Message.success('付錢失敗');\n          });\n      }\n    });\n\n\n  }\n\n  function deleteAllData() {// delete all data\n\n    Swal.fire({\n      title: `確設刪除全部訂單?`,\n      text: '刪除後將無法復原哦～～',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dbService.remove(null,{query:{}}).then((res) => {\n\n          console.log('==delete success:', res);\n \n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: '刪除成功',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          serverDataUpdate();\n       \n        })\n          .catch((error) => {\n            console.log('==delete fail:', error);\n            Message.success('刪除失敗');\n          });\n      }\n    });\n\n\n  }\n\n  function patchOrders(data) {//Use orders patch\n    funUpdate(data._id, { ...data }).then((res) => {\n      console.log('==update success:', res);\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: '編輯成功',\n        showConfirmButton: false,\n        timer: 1500,\n      });\n      serverDataUpdate();\n      setWriteData({});\n      setParsed64('');\n      setEditKey(false);\n      setPopupState(false);\n    })\n      .catch((error) => {\n        console.log('==update fail:', error);\n        Message.success('更新失敗');\n      });\n\n  }\n\n\n  function createUploads() {//Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n\n        const formData = new FormData();\n        Object.keys(writeData).forEach((eKey) => {\n\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        });\n        // formData.append('createdTime', new Date().toLocaleString());\n        // formData.append('updatedTime', new Date().toLocaleString());\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`/uploads`, {\n          method: 'POST',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    })\n\n  }\n\n  function patchUploads(data) {//Use uploads patch\n    return new Promise(async (resolve, reject) => {\n      try {\n        let patchUrl = `/uploads?type=${dbName}&id=${data._id}`\n        const formData = new FormData();\n\n        const passKeys = ['files', '_id'];//禁止FormData Patch add Key\n\n        Object.keys(data).forEach((eKey) => {\n\n          if (!passKeys.includes(eKey)) {\n            if (eKey == \"vendorName\") {\n              formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n            } else {\n              formData.append(eKey, writeData[eKey]);\n            }\n          }\n        });\n\n        if (uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n        if (!uploadFile.current.files.length) {\n          patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`\n        }\n        console.log('rdy to PP:', formData);\n        const Res = await axios(patchUrl, {\n          method: 'PATCH',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        console.log('PP err:', error);\n        reject();\n      }\n    })\n  }\n\n\n\n\n\n\n  return (\n    <>\n      <Dialog\n\n        hasMask={false}\n        visible={popupState}\n        onOk={() => {\n          createSend();\n        }}\n        onCancel={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n        onClose={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n      >\n        {[...Object.keys(keys)].map((e, nb) => {\n          //-------Render Create Element\n          const type = keys[e].type;\n          if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n          return <Fragment key={keys[e].text}>\n            <Form>\n\n              <Item label={keys[e].text} >\n                {typeComponents(e, type)}\n              </Item>\n\n            </Form>\n          </Fragment>;\n        })}\n      </Dialog>\n\n      <div className=\"addBtnBox\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setPopupState(true);\n          }}\n        >\n          新增訂單\n                </Button>\n        <Button\n        className=\"delBtn\"\n          type=\"secondary\"\n          onClick={() => {\n            deleteAllData();\n          }}\n        >\n          刪除訂單\n                </Button>\n\n\n      </div>\n\n      {currentPosts && currentPosts.length > 0 ?\n\n        <Table dataSource={currentPosts} onSort={onTableSort}>\n          {[...Object.keys(keys)].map((list) => {\n            //  -------Render Table Data\n\n            if (list == \"files\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].files.length > 0 ?\n                    <img className=\"file\" alt=\"No Data\" src={currentPosts[index].files} /> : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"createTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"updateTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].updateTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorName\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorName.length > 0 ?\n                    currentPosts[index].vendorName.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorLicense\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorLicense.length > 0 ?\n                    currentPosts[index].vendorLicense.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list.name}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else {\n              return <Table.Column sortable key={keys[list].text} title={keys[list].text} dataIndex={list} width={200} />\n            }\n\n          })}\n          <Table.Column\n            width={200}\n            title=\"操作\"\n            cell={(value, index, record) => {\n              // console.log(value, index, record)\n              return (\n                <div className=\"btnBox\">\n                  <Button\n                    type=\"secondary\"\n                    onClick={() => {\n\n                      patchPayOrders(record)\n                    }}\n                  >\n                    {currentPosts[index].pay === true ? \"已付錢\" : \"付錢\"}\n                  </Button>\n                  <Button\n                    type=\"normal\"\n                    onClick={() => {\n                      setPopupState(true);\n                      setEditKey(true);\n                      setEditIndex(index);\n                      setWriteData({ ...currentPosts[index] });\n                    }}\n                  >\n                    編輯\n                                            </Button>\n\n                  <Button\n                    type=\"primary\"\n                    warning\n                    onClick={() => {\n                      const item = currentPosts[index];\n                      Swal.fire({\n                        title: `確定刪除此資料?`,\n                        text: '刪除後將無法復原!!',\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#BEBEBE',\n                        confirmButtonText: '確定',\n                        cancelButtonText: '取消',\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          Swal.fire('刪除!', `此資料已刪除`, 'success');\n                          funRemove(item._id).then(() => {\n                            const prePages =\n                              currentPage - 1 >= 0 ? currentPage - 1 : 0;\n                            if (\n                              props.listData.length - 1 <=\n                              prePages * postsPerPage\n                            ) {\n                              setCurrentPage(\n                                currentPage - 1 < 1 ? 1 : currentPage - 1\n                              );\n                            }\n\n                            serverDataUpdate();\n                          });\n                        }\n                      });\n                    }}\n                  >\n                    刪除\n                                     </Button>\n                </div>\n              );\n            }}\n          />\n        </Table>\n        : null}\n\n\n\n\n      <Pagination\n\n        total={props.listData.length}\n        pageSize={postsPerPage}\n        totalRender={(total) => `Total: ${total}`}\n        onChange={(pageNumber) => {\n          setCurrentPage(pageNumber);\n        }}\n      />\n\n\n    </>\n  );\n}\n\nexport default OrderTable;\n","import OrderTable from './OrderTable'\nexport default OrderTable;\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport {\n  Button,\n  Dialog,\n  Input,\n  Form,\n  Select,\n  DatePicker,\n  Message,\n  Card,\n  Table,\n  Pagination\n} from \"@alifd/next\";\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './Menu.css';\nimport ModalImage from \"react-modal-image\";\nconst Option = Select.Option;\nconst { Item } = Form;\nconst Menu = (props) => {\n  const { dbName, keys, text } = props.menuProps;\n  const dbService = client.service(`${dbName}`);\n\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\");\n  //uploads files\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null);\n  // sort\n  const [curdataIndex, setcurDataIndex] = useState('createAt');\n  const [curorder, setcurOrder] = useState('asc');\n  // change page\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.menuData.slice(indexOfFirstPost, indexOfLastPost);\n  // dbService\n  async function funFind(para) {\n    const result = await dbService.find({ query: para });\n    // console.log(result);\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return (await dbService.create(obj))\n  }\n  async function funUpdate(id, obj) {\n    return (await dbService.patch(id, obj))\n  }\n  async function funRemove(id) {\n    return (await dbService.remove(id))\n  }\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n\n    funFind({}).then((result) => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number'\n          ? a[rdataIndex].toString()\n          : a[rdataIndex]\n        ).localeCompare(\n          typeof b[rdataIndex] === 'number'\n            ? b[rdataIndex].toString()\n            : b[rdataIndex]\n        );\n        return rorder === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1;\n      })\n      props.menuDataProps(sortedArr);\n      // props.listDataAllProps(sortedArr)\n    });\n\n\n  };\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M =\n          (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          Message.error('Image must smaller than 20MB!');\n          return reject();\n        }\n        resolve(isLt20M);\n      } else {\n        setParsed64('')\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0];\n      // console.log(data)\n      files.push(data);\n      setParsed(files);\n\n      //轉Base64 上傳檔案後呈現沒有寫到DB\n      const reader = new FileReader();\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n\n    setWriteData({ ...writeData, ...obj });\n  };\n  const createSend = () => {\n    //-------Create Data 送出\n    Swal.fire({\n      title: `確定新增此資料?`,\n      text: '請確認資料填寫完整!!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        createUploads().then((res) => {\n          Swal.fire('成功!', `此資料已新增`, 'success');\n          console.log('==create success:', res);\n          serverDataUpdate();\n          setWriteData({});\n          setParsed64('');\n          setEditKey(false);\n          setPopupState(false);\n        }).catch((error) => {\n          console.log('==create fail:', error);\n          // Message.error(`${err}`);\n        })\n\n      }\n    });\n\n\n  };\n\n\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n    switch (type) {\n      case \"input\":\n        element = (\n          <Input\n            value={writeData[e]}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n            placeholder={e}\n          />\n        );\n        break;\n      case \"datePicker\":\n        element = (\n          <DatePicker\n            value={writeData[e]}\n            placeholder={e}\n            onChange={(value) => {\n              addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n        break;\n      case \"textArea\":\n        element = (\n          <Input.TextArea\n            value={writeData[e]}\n            placeholder={e}\n            maxLength={500}\n            rows={6}\n            hasLimitHint\n            aria-label=\"input max length 500\"\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"select\":\n        element = (\n          <Select\n            value={writeData[e]}\n            hasClear\n            style={{ width: '100%' }}\n            placeholder={e}\n            dataSource={props.categoryProps}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"uploads\":\n        element = (\n          <>\n            <input\n              accept=\"image/png, image/jpeg ,image/jpg\"\n              ref={uploadFile}\n              onChange={handleFiles}\n              type=\"file\"\n              id=\"file\"\n              name=\"files\"\n            // multiple\n            />\n            {editKey == true ?\n              <img\n                style={{ width: '50px', height: '50px' }}\n                src={`${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`}\n                alt=\"圖片\"\n              />\n\n              : null\n\n            }\n\n            <img className=\"file\" src={`${parsed64.length > 0 ? parsed64 : null}`} alt=\"圖片\"></img>\n          </>);\n        break;\n      case \"multiSelect\":\n        element = (\n          <>\n            <Select\n              mode=\"multiple\"\n              value={writeData[e]}\n              showSearch\n              onChange={(value) => {\n                addCreateData(e, value);\n              }}\n              dataSource={props.venderNameProps}\n              style={{ width: '100%' }}\n            />\n\n          </>);\n        break;\n    }\n    return element;\n  };\n\n  function patchUploads(data) {//edit uploads patch\n    // console.log(\"data\",data)\n\n    Swal.fire({\n      title: `確設定此菜單為本日菜單?`,\n      text: '麻煩再次確認哦～～',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        funUpdate(data._id, { isMenu: \"good\" }).then((res) => {\n          console.log('==update success:', res);\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: '設定成功',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          serverDataUpdate();\n          setWriteData({});\n          setParsed64('');\n          setEditKey(false);\n          setPopupState(false);\n        })\n          .catch((error) => {\n            console.log('==update fail:', error);\n            Message.success('設定失敗');\n          });\n\n      }\n    });\n\n\n\n  }\n\n\n  function createUploads() {//Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n\n        const formData = new FormData();\n        Object.keys(writeData).forEach((eKey) => {\n\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        });\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`/uploads`, {\n          method: 'POST',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    })\n\n  }\n\n  // function patchUploads(data) {//Use uploads patch\n  //   return new Promise(async (resolve, reject) => {\n  //     try {\n  //       let patchUrl = `/uploads?type=${dbName}&id=${data._id}`\n  //       const formData = new FormData();\n\n  //       const passKeys = ['files', '_id'];//禁止FormData Patch add Key\n\n  //       Object.keys(data).forEach((eKey) => {\n\n  //         if (!passKeys.includes(eKey)) {\n  //           if (eKey == \"vendorName\") {\n  //             formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n  //           } else {\n  //             formData.append(eKey, writeData[eKey]);\n  //           }\n  //         }\n  //       });\n\n  //       if (uploadFile.current.files.length > 0) {\n  //         formData.append('files', uploadFile.current.files[0]);\n  //       }\n  //       if (!uploadFile.current.files.length) {\n  //         patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`\n  //       }\n  //       console.log('rdy to PP:', formData);\n  //       const Res = await axios(patchUrl, {\n  //         method: 'PATCH',\n  //         headers: { authorization: window.localStorage['feathers-jwt'] },\n  //         data: formData\n  //       });\n\n  //       resolve(Res);\n  //     } catch (error) {\n  //       console.log('PP err:', error);\n  //       reject();\n  //     }\n  //   })\n  // }\n\n\n\n\n\n\n  return (\n    <>\n      <Dialog\n\n        hasMask={false}\n        visible={popupState}\n        onOk={() => {\n          createSend();\n        }}\n        onCancel={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n        onClose={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n      >\n        {[...Object.keys(keys)].map((e, nb) => {\n          //-------Render Create Element\n          const type = keys[e].type;\n          if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n          return <Fragment key={keys[e].text}>\n            <Form>\n\n              <Item label={keys[e].text} >\n                {typeComponents(e, type)}\n              </Item>\n\n            </Form>\n          </Fragment>;\n        })}\n      </Dialog>\n\n      <div className=\"addBox\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setPopupState(true);\n          }}\n        >\n          新增菜單\n                </Button>\n\n\n      </div>\n      {currentPosts && currentPosts.length > 0 ?\n\n        <Table dataSource={currentPosts} onSort={onTableSort}>\n          {[...Object.keys(keys)].map((list) => {\n            //  -------Render Table Data\n\n            if (list == \"files\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {/* {currentPosts[index].files.length > 0 ?\n                    <img alt=\"No Data\" src={currentPosts[index].files} /> : null} */}\n                  <ModalImage\n                    className=\"file\"\n                    small={currentPosts[index].showPath}\n                    large={currentPosts[index].showPath}\n                    alt=\"菜單\"\n                  />\n\n\n                </>)\n              }\n              } />\n            } else if (list == \"createAt\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createAt).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"createTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"updateTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].updateTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorName\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorName.length > 0 ?\n                    currentPosts[index].vendorName.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorLicense\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorLicense.length > 0 ?\n                    currentPosts[index].vendorLicense.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list.name}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else {\n              return <Table.Column sortable key={keys[list].text} title={keys[list].text} dataIndex={list} width={200} />\n            }\n\n          })}\n          <Table.Column\n            width={200}\n            title=\"操作\"\n            cell={(record, index, value) => {\n              // console.log(\"=====hi~~\",record, index, value)\n              return (\n                <div className=\"btnBox\">\n                  <Button\n                    type=\"normal\"\n                    onClick={() => {\n                      patchUploads(value)\n                    }}\n                  >\n                    設為今日菜單\n                    </Button>\n\n                  <Button\n                    type=\"primary\"\n                    warning\n                    onClick={() => {\n                      const item = currentPosts[index];\n                      Swal.fire({\n                        title: `確定刪除此資料?`,\n                        text: '刪除後將無法復原!!',\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#BEBEBE',\n                        confirmButtonText: '確定',\n                        cancelButtonText: '取消',\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          Swal.fire('刪除!', `此資料已刪除`, 'success');\n                          funRemove(item._id).then(() => {\n                            const prePages =\n                              currentPage - 1 >= 0 ? currentPage - 1 : 0;\n                            if (\n                              props.menuData.length - 1 <=\n                              prePages * postsPerPage\n                            ) {\n                              setCurrentPage(\n                                currentPage - 1 < 1 ? 1 : currentPage - 1\n                              );\n                            }\n\n                            serverDataUpdate();\n                          });\n                        }\n                      });\n                    }}\n                  >\n                    刪除\n                             </Button>\n                </div>\n              );\n            }}\n          />\n        </Table>\n        : null}\n\n\n\n\n      <Pagination\n\n        total={props.menuData.length}\n        pageSize={postsPerPage}\n        totalRender={(total) => `Total: ${total}`}\n        onChange={(pageNumber) => {\n          setCurrentPage(pageNumber);\n        }}\n      />\n\n\n\n\n\n    </>\n  );\n}\n\nexport default Menu;\n","import Menu from './Menu'\nexport default Menu;\n","import Lunch from './Lunch'\nexport default Lunch;\n","import React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport Menu from '../../components/Menu';\n\nconst  Lunch =(props)=> {\n    const tarProps = { //訂單\n        dbName: \"orders\",\n        keys: {\n            name: {\n                type: \"input\",\n                text: \"姓名\"\n            },\n            text: {\n                type: \"input\",\n                text: \"文字\"\n            },\n            money: {\n                type: \"input\",\n                text: \"金額\"\n            },\n          \n    \n        }\n    }\n\n    const menuProps = { //菜單\n        dbName: \"uploads\",\n        keys: {\n            createAt:{\n                type:'none',\n                text:'建立時間'\n            },\n            files: {\n                type: \"uploads\",\n                text: \"菜單\"\n            },\n          \n          \n    \n        }\n    }\n\n    const [myListData, setMyListData] = useState([]);//訂單\n    const [myMenuData, setMyMenuData] = useState([]);//菜單\n    const [myListDataAll, setMyListDataAll] = useState([]);\n    const [totalAllProps, seTotalAllProps] = useState([]);//總金額\n    const [payOk, setPayOk] = useState([]);//付錢\n    useEffect(() => {\n\n         \n        const idNo = [false]\n        const payNo =  [...myListData].filter( i => idNo.includes( i.pay ) ).map(x=>x.name);\n        const idYes = [true]\n        const payYes =  [...myListData].filter( i => idYes.includes( i.pay ) ).map(x=>x.money).reduce(function(a, b) {\n            return parseInt(a) + parseInt(b);\n        }, 0);\n\n\n       console.log(\"payNo\",payNo)\n       console.log(\"payYes\",payYes)\n       props.setPayNoArr(payNo)\n       props.setPayYes(payYes)\n           \n\n     \n    }, [myListData]);\n\n    useEffect(() => {\n\n        const sortedArr = [...myListDataAll].map((e) => {\n            let hasIncludes = false;\n            Object.keys(e).forEach((ee) => {\n                let val2 = e[ee];\n                if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n            })\n            if (hasIncludes) return e;\n            return false;\n        }).filter((e) => e !== false);\n        setMyListData([...sortedArr]);\n    }, [props.filterStr]);\n\n\n    useEffect(() => {\n\n         \n\n        const pay =  [...totalAllProps].map(x=>parseInt(x.money)).reduce(function(a, b) {\n            return a + b;\n        }, 0);\n\n       console.log(\"pay\",pay)\n           \n       props.setPayAllTotal(pay)\n     \n    }, [totalAllProps]);\n\n    // useEffect(() => {\n\n         \n\n    //     const payOkRes =  [...payOk].reduce(function(a, b) {\n    //         return parseInt(a) + parseInt(b);\n    //     }, 0);\n\n    //    console.log(\"payOk\",payOkRes)\n    //    props.setPayOkTotal(payOkRes)  \n\n     \n    // }, [payOk]);\n    return (\n        <>\n                 \n                <OrderTable \n                tarProps={tarProps} \n                listData={myListData} \n                listDataProps={data => setMyListData([...data])} \n                listDataAllProps={data => setMyListDataAll([...data])}  \n                payAllTotalProps={data => seTotalAllProps([...data])} \n                // setPayOkProps={data =>setPayOk([...payOk,...[data]])}\n\n                />\n                <br /><br />\n                <Menu menuProps={menuProps} menuData={myMenuData} menuDataProps={data => setMyMenuData([...data])}  />\n        </>\n    );\n}\n\nexport default Lunch;\n","import React, { useState } from 'react';\nimport { Input } from '@alifd/next';\nimport './App.css';\nimport Lunch from './pages/Lunch';\n\nconst App = () => {\n  const [tFilterStr, setTFilterStr] = useState('');\n  const [payAllTotal, setPayAllTotal] = useState(0);\n  const [payOkTotal, setPayOkTotal] = useState(0);\n  const [payNoArr, setPayNoArr] = useState([]);\n  const [payYes, setPayYes] = useState(0);\n \n\n  function searchRender(value) {//input search filter\n\n    setTFilterStr(value);\n  }\n  return (\n    <div className=\"app\">\n      <div  className=\"title\">EZCON點餐系統後台</div>\n      <div className=\"box\">\n        <Input\n          \n          size=\"large\"\n          placeholder=\"輸入搜尋文字\"\n          onChange={searchRender}\n          aria-label=\"this is input\"\n        />\n        <div className=\"payText\">總金額:{payAllTotal}元</div>\n        <div  className=\"payText\">已收:{payYes}元</div>\n        <div  className=\"payText\">未付錢:{payNoArr&&payNoArr.length>0?payNoArr.join():\"都付錢了\"}</div>\n\n        </div>\n     <br/><br/>\n      <Lunch filterStr={tFilterStr} setPayAllTotal={setPayAllTotal} setPayOkTotal={setPayOkTotal} setPayNoArr={setPayNoArr} setPayYes={setPayYes}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}